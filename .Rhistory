jpeg("SensitivityTestGraphs.jpg", units="in", res=300, width = 8.5, height = 11)
layout(matrix(c(1,2,3,4,5,6), 3, 2, byrow=T), widths=c(1.2,1))
par(mar=c(4,5,1,1))
plot(d13C_MAT ~ MAT, data=SensData, ylim=c(-13.5, -3.5), cex=1.3, cex.axis = 1.3, cex.lab = 1.5, main="",type="o", col="black", yaxp=c(-4, -12, 4), xlab=expression(paste("Tm"[a], " (",degree,"C)")), ylab=expression(paste(delta[carbonate], ("\u2030"))), pch=16)
par(new=T)
plot(d18O_MAT ~ MAT, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.3, cex.lab = 1.5, ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0,-3.5,"a", cex=1.5)
par(mar=c(4,1,1,1))
plot(d13C_T_seas ~ T_seas, data=SensData, ylim=c(-13.5, -3.5), yaxp=c(-4, -12, 4),cex=1.3, cex.axis = 1.5, cex.lab = 1.7, main="", type="o", col="black", yaxt='n', xlab=expression(paste("Tm"[PCQ], " - Tm"[a]," (",degree,"C)")), ylab="", pch=16)
par(new=T)
plot(d18O_T_seas ~ T_seas, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
legend("topright", legend=c("Carbon","Oxygen"), col=c("black","darkgray"), lty=1, pch=19, cex=1.5)
text(-5,-3.5,"b", cex=1.5)
par(mar=c(4,5,1,1))
plot(d13C_MAP ~ MAP, data=SensData, col="black", main="", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), xlim=c(100, 1100), type="o", yaxp=c(-4, -12, 4), xlab=expression(paste("P"[a]," (mm)")), ylab=expression(paste(delta[carbonate], ("\u2030"))), pch=16)
par(new=T)
plot(d18O_MAP ~ MAP, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5),  xlim=c(100, 1100),type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(100,-3.5,"c", cex=1.5)
par(mar=c(4,1,1,1))
plot(d13C_P_seas ~ P_seas, data=SensData, col="black", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, main="", yaxp=c(-4, -12, 4), ylim=c(-13.5, -3.5), xlim=c(0.02,0.42), type="o", xaxp=c(0,0.4,4), xlab=expression(paste("Pf"[PCQ])), ylab="", yaxt='n', pch=16)
par(new=T)
plot(d18O_P_seas ~ P_seas, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5),  xlim=c(0.02, 0.42),type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0.02,-3.5,"d", cex=1.5)
par(mar=c(4,5,1,1))
plot(d13C_ST ~ ST, data=SensData, col="black", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), yaxp=c(-4, -12, 4), type="o", xlab="Soil Texture Parameter", ylab=expression(paste(delta[carbonate], ("\u2030"))), pch=16)
par(new=T)
plot(d18O_ST ~ ST, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0,-3.5,"e", cex=1.5)
par(mar=c(4,1,1,1))
plot(d13C_pCO2 ~ pCO2, data=SensData, col="black",  cex=1.3, cex.axis = 1.5, cex.lab = 1.7, xlim=c(0, 2500), ylim=c(-13.5, -3.5), type="o", xlab=expression(paste(italic('p'),"CO"[2]," (ppm)")), yaxt='n', ylab="", pch=16)
par(new=T)
plot(d18O_pCO2 ~ pCO2, data=SensData, col="darkgray",  cex=1.3, cex.axis = 1.5, cex.lab = 1.7, xlim=c(0, 2500), ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0,-3.5,"f", cex=1.5)
dev.off()
jpeg("SensitivityTestGraphs.jpg", units="in", res=300, width = 8.5, height = 11)
layout(matrix(c(1,2,3,4,5,6), 3, 2, byrow=T), widths=c(1.2,1))
par(mar=c(4,5,1,1))
plot(d13C_MAT ~ MAT, data=SensData, ylim=c(-13.5, -3.5), cex=1.3, cex.axis = 1.5, cex.lab = 1.7, main="",type="o", col="black", yaxp=c(-4, -12, 4), xlab=expression(paste("Tm"[a], " (",degree,"C)")), ylab=expression(paste(delta[carbonate], ("\u2030"))), pch=16)
par(new=T)
plot(d18O_MAT ~ MAT, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.3, cex.lab = 1.5, ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0,-3.5,"a", cex=1.5)
par(mar=c(4,1,1,1))
plot(d13C_T_seas ~ T_seas, data=SensData, ylim=c(-13.5, -3.5), yaxp=c(-4, -12, 4),cex=1.3, cex.axis = 1.5, cex.lab = 1.7, main="", type="o", col="black", yaxt='n', xlab=expression(paste("Tm"[PCQ], " - Tm"[a]," (",degree,"C)")), ylab="", pch=16)
par(new=T)
plot(d18O_T_seas ~ T_seas, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
legend("topright", legend=c("Carbon","Oxygen"), col=c("black","darkgray"), lty=1, pch=19, cex=1.5)
text(-5,-3.5,"b", cex=1.5)
par(mar=c(4,5,1,1))
plot(d13C_MAP ~ MAP, data=SensData, col="black", main="", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), xlim=c(100, 1100), type="o", yaxp=c(-4, -12, 4), xlab=expression(paste("P"[a]," (mm)")), ylab=expression(paste(delta[carbonate], ("\u2030"))), pch=16)
par(new=T)
plot(d18O_MAP ~ MAP, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5),  xlim=c(100, 1100),type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(100,-3.5,"c", cex=1.5)
par(mar=c(4,1,1,1))
plot(d13C_P_seas ~ P_seas, data=SensData, col="black", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, main="", yaxp=c(-4, -12, 4), ylim=c(-13.5, -3.5), xlim=c(0.02,0.42), type="o", xaxp=c(0,0.4,4), xlab=expression(paste("Pf"[PCQ])), ylab="", yaxt='n', pch=16)
par(new=T)
plot(d18O_P_seas ~ P_seas, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5),  xlim=c(0.02, 0.42),type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0.02,-3.5,"d", cex=1.5)
par(mar=c(4,5,1,1))
plot(d13C_ST ~ ST, data=SensData, col="black", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), yaxp=c(-4, -12, 4), type="o", xlab="Soil Texture Parameter", ylab=expression(paste(delta[carbonate], ("\u2030"))), pch=16)
par(new=T)
plot(d18O_ST ~ ST, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0,-3.5,"e", cex=1.5)
par(mar=c(4,1,1,1))
plot(d13C_pCO2 ~ pCO2, data=SensData, col="black",  cex=1.3, cex.axis = 1.5, cex.lab = 1.7, xlim=c(0, 2500), ylim=c(-13.5, -3.5), type="o", xlab=expression(paste(italic('p'),"CO"[2]," (ppm)")), yaxt='n', ylab="", pch=16)
par(new=T)
plot(d18O_pCO2 ~ pCO2, data=SensData, col="darkgray",  cex=1.3, cex.axis = 1.5, cex.lab = 1.7, xlim=c(0, 2500), ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0,-3.5,"f", cex=1.5)
dev.off()
jpeg("SensitivityTestGraphs.jpg", units="in", res=300, width = 8.5, height = 11)
layout(matrix(c(1,2,3,4,5,6), 3, 2, byrow=T), widths=c(1.2,1))
par(mar=c(4,5,1,1))
plot(d13C_MAT ~ MAT, data=SensData, ylim=c(-13.5, -3.5), cex=1.3, cex.axis = 1.5, cex.lab = 1.7, main="",type="o", col="black", yaxp=c(-4, -12, 4), xlab=expression(paste("Tm"[a], " (",degree,"C)")), ylab=expression(paste(delta[carbonate], ("\u2030"))), pch=16)
par(new=T)
plot(d18O_MAT ~ MAT, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.3, cex.lab = 1.5, ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0,-3.5,"a", cex=1.7)
par(mar=c(4,1,1,1))
plot(d13C_T_seas ~ T_seas, data=SensData, ylim=c(-13.5, -3.5), yaxp=c(-4, -12, 4),cex=1.3, cex.axis = 1.5, cex.lab = 1.7, main="", type="o", col="black", yaxt='n', xlab=expression(paste("Tm"[PCQ], " - Tm"[a]," (",degree,"C)")), ylab="", pch=16)
par(new=T)
plot(d18O_T_seas ~ T_seas, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
legend("topright", legend=c("Carbon","Oxygen"), col=c("black","darkgray"), lty=1, pch=19, cex=1.5)
text(-5,-3.5,"b", cex=1.7)
par(mar=c(4,5,1,1))
plot(d13C_MAP ~ MAP, data=SensData, col="black", main="", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), xlim=c(100, 1100), type="o", yaxp=c(-4, -12, 4), xlab=expression(paste("P"[a]," (mm)")), ylab=expression(paste(delta[carbonate], ("\u2030"))), pch=16)
par(new=T)
plot(d18O_MAP ~ MAP, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5),  xlim=c(100, 1100),type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(100,-3.5,"c", cex=1.7)
par(mar=c(4,1,1,1))
plot(d13C_P_seas ~ P_seas, data=SensData, col="black", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, main="", yaxp=c(-4, -12, 4), ylim=c(-13.5, -3.5), xlim=c(0.02,0.42), type="o", xaxp=c(0,0.4,4), xlab=expression(paste("Pf"[PCQ])), ylab="", yaxt='n', pch=16)
par(new=T)
plot(d18O_P_seas ~ P_seas, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5),  xlim=c(0.02, 0.42),type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0.02,-3.5,"d", cex=1.7)
par(mar=c(4,5,1,1))
plot(d13C_ST ~ ST, data=SensData, col="black", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), yaxp=c(-4, -12, 4), type="o", xlab="Soil Texture Parameter", ylab=expression(paste(delta[carbonate], ("\u2030"))), pch=16)
par(new=T)
plot(d18O_ST ~ ST, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0,-3.5,"e", cex=1.7)
par(mar=c(4,1,1,1))
plot(d13C_pCO2 ~ pCO2, data=SensData, col="black",  cex=1.3, cex.axis = 1.5, cex.lab = 1.7, xlim=c(0, 2500), ylim=c(-13.5, -3.5), type="o", xlab=expression(paste(italic('p'),"CO"[2]," (ppm)")), yaxt='n', ylab="", pch=16)
par(new=T)
plot(d18O_pCO2 ~ pCO2, data=SensData, col="darkgray",  cex=1.3, cex.axis = 1.5, cex.lab = 1.7, xlim=c(0, 2500), ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0,-3.5,"f", cex=1.7)
dev.off()
jpeg("SensitivityTestGraphs.jpg", units="in", res=300, width = 8, height = 11)
layout(matrix(c(1,2,3,4,5,6), 3, 2, byrow=T), widths=c(1.2,1))
par(mar=c(4,5,1,1))
plot(d13C_MAT ~ MAT, data=SensData, ylim=c(-13.5, -3.5), cex=1.3, cex.axis = 1.5, cex.lab = 1.7, main="",type="o", col="black", yaxp=c(-4, -12, 4), xlab=expression(paste("Tm"[a], " (",degree,"C)")), ylab=expression(paste(delta[carbonate], ("\u2030"))), pch=16)
par(new=T)
plot(d18O_MAT ~ MAT, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.3, cex.lab = 1.5, ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0,-3.5,"a", cex=1.7)
par(mar=c(4,1,1,1))
plot(d13C_T_seas ~ T_seas, data=SensData, ylim=c(-13.5, -3.5), yaxp=c(-4, -12, 4),cex=1.3, cex.axis = 1.5, cex.lab = 1.7, main="", type="o", col="black", yaxt='n', xlab=expression(paste("Tm"[PCQ], " - Tm"[a]," (",degree,"C)")), ylab="", pch=16)
par(new=T)
plot(d18O_T_seas ~ T_seas, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
legend("topright", legend=c("Carbon","Oxygen"), col=c("black","darkgray"), lty=1, pch=19, cex=1.5)
text(-5,-3.5,"b", cex=1.7)
par(mar=c(4,5,1,1))
plot(d13C_MAP ~ MAP, data=SensData, col="black", main="", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), xlim=c(100, 1100), type="o", yaxp=c(-4, -12, 4), xlab=expression(paste("P"[a]," (mm)")), ylab=expression(paste(delta[carbonate], ("\u2030"))), pch=16)
par(new=T)
plot(d18O_MAP ~ MAP, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5),  xlim=c(100, 1100),type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(100,-3.5,"c", cex=1.7)
par(mar=c(4,1,1,1))
plot(d13C_P_seas ~ P_seas, data=SensData, col="black", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, main="", yaxp=c(-4, -12, 4), ylim=c(-13.5, -3.5), xlim=c(0.02,0.42), type="o", xaxp=c(0,0.4,4), xlab=expression(paste("Pf"[PCQ])), ylab="", yaxt='n', pch=16)
par(new=T)
plot(d18O_P_seas ~ P_seas, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5),  xlim=c(0.02, 0.42),type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0.02,-3.5,"d", cex=1.7)
par(mar=c(4,5,1,1))
plot(d13C_ST ~ ST, data=SensData, col="black", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), yaxp=c(-4, -12, 4), type="o", xlab="Soil Texture Parameter", ylab=expression(paste(delta[carbonate], ("\u2030"))), pch=16)
par(new=T)
plot(d18O_ST ~ ST, data=SensData, col="darkgray", cex=1.3, cex.axis = 1.5, cex.lab = 1.7, ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0,-3.5,"e", cex=1.7)
par(mar=c(4,1,1,1))
plot(d13C_pCO2 ~ pCO2, data=SensData, col="black",  cex=1.3, cex.axis = 1.5, cex.lab = 1.7, xlim=c(0, 2500), ylim=c(-13.5, -3.5), type="o", xlab=expression(paste(italic('p'),"CO"[2]," (ppm)")), yaxt='n', ylab="", pch=16)
par(new=T)
plot(d18O_pCO2 ~ pCO2, data=SensData, col="darkgray",  cex=1.3, cex.axis = 1.5, cex.lab = 1.7, xlim=c(0, 2500), ylim=c(-13.5, -3.5), type="o", xlab="", ylab="", xaxt='n', yaxt='n', pch=16)
text(0,-3.5,"f", cex=1.7)
dev.off()
jpeg("Evap_OPT.jpg", units="in", res=300, width=10, height=4.68)
layout(matrix(c(1,2), 1, 2, byrow = TRUE), widths=c(1.001,1))
par(mar=c(5.5, 5, 0, 0))
plot(rmses.rast_hq, main="", cex.lab=1.3, xlab="% Seasonal Rainfall", ylab="% Evaporated Water", xlim=c(0,1), ylim=c(0,1), zlim=c(2.5,6.5), legend = F)
par(mar=c(5.5, 0, 0, 7))
plot(rmses.rast_dq, yaxt='n', cex.lab=1.3, main="", xlab="% Seasonal Rainfall", ylab="", xlim=c(0,1), ylim=c(0,1), zlim=c(2.5,6.5))  #now need to make a nice plot...
mtext("RMSE, (\u2030)", 4, line=0.5)
dev.off()
jpeg("Evap_OPT.jpg", units="in", res=300, width=10, height=4.68)
layout(matrix(c(1,2), 1, 2, byrow = TRUE), widths=c(1.001,1))
par(mar=c(5.5, 5, 0, 0))
plot(rmses.rast_hq, main="", cex.lab=1.3, xlab="% Seasonal Rainfall", ylab="% Evaporated Water", xlim=c(0,1), ylim=c(0,1), zlim=c(2.5,6.5), legend = F)
par(mar=c(5.5, 0, 0, 7))
plot(rmses.rast_dq, yaxt='n', cex.lab=1.3, main="", xlab="% Seasonal Rainfall", ylab="", xlim=c(0,1), ylim=c(0,1), zlim=c(2.5,6.5))  #now need to make a nice plot...
mtext("RMSE, (\u2030)", 4, line=0.5, cex=1.3)
dev.off()
jpeg("Evap_OPT.jpg", units="in", res=300, width=10, height=4.68)
layout(matrix(c(1,2), 1, 2, byrow = TRUE), widths=c(1.001,1))
par(mar=c(5.5, 5, 0, 0))
plot(rmses.rast_hq, main="", cex.lab=1.3, cex.axis=1.3, xlab="% Seasonal Rainfall", ylab="% Evaporated Water", xlim=c(0,1), ylim=c(0,1), zlim=c(2.5,6.5), legend = F)
par(mar=c(5.5, 0, 0, 7))
plot(rmses.rast_dq, yaxt='n', cex.lab=1.3, cex.axis=1.3, main="", xlab="% Seasonal Rainfall", ylab="", xlim=c(0,1), ylim=c(0,1), zlim=c(2.5,6.5))  #now need to make a nice plot...
mtext("RMSE, (\u2030)", 4, line=0.5, cex=1.3)
dev.off()
hq_pred = data.frame(d13C=numeric(0), d18O=numeric(0), d13C_sd=numeric(0), d18O_sd=numeric(0))
for(i in 1: nrow(sites)){
hq_pred[i,] = sm_forward_evap(sites$map.wc[i], sites$mat.wc[i], sites$hqp.frac[i], sites$hqt.offset[i], sites$Ra[i], 280)
}
hq_pred$Site = sites$Site
dq_pred = data.frame(d13C=numeric(0), d18O=numeric(0), d13C_sd=numeric(0), d18O_sd=numeric(0))
for(i in 1: nrow(sites)){
dq_pred[i,] = sm_forward_evap(sites$map.wc[i], sites$mat.wc[i], sites$dqp.frac[i], sites$dqt.offset[i], sites$Ra[i], 280)
}
dq_pred$Site = sites$Site
## Plots w/ MAP colors
hq.comp = merge.data.frame(hq_pred, sites, by.x = "Site", by.y = "Site", all.x=TRUE)
dq.comp = merge.data.frame(dq_pred, sites, by.x = "Site", by.y = "Site", all.x=TRUE)
hq.comp = merge.data.frame(hq.comp, data.aves, by.x = "Site", by.y = "Group.1", all.x=TRUE)
dq.comp = merge.data.frame(dq.comp, data.aves, by.x = "Site", by.y = "Group.1", all.x=TRUE)
View(hq.comp)
library(RColorBrewer)
c = ceiling(((hq.comp$map.wc - 100) / 700) * 7)
pal_map = brewer.pal(7, "Blues")
c_mat = ceiling(((hq.comp$mat.wc + 5) / 20 * 5))
pal_mat = brewer.pal(6, "YlOrRd")
jpeg("Pre_Validation.jpg", units="in", res=300, width=8.5, height=7.5)
layout(matrix(c(1,2,3,4), 2, 2, byrow=T), heights=c(1,1.1,1,1.1), widths=c(1,1.05,1,1.05))
par(mar=c(2,5,1,0))
plot(hq.comp$d13C.measured, hq.comp$d13C, pch=16, col=pal_map[c], xlim=c(-12,2.1), ylim=c(-12,2.1), main="", cex = 1.25,
xlab="", cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{13}, "C (\u2030)")),
xaxt='n')
abline(0,1)
points(hq.comp$d13C.measured, hq.comp$d13C, pch=1)
text(-12,2,"a", cex=1.5)
par(mar=c(2,5,1,1))
plot(hq.comp$d18O.measured, hq.comp$d18O, pch=16, col=pal_map[c], xlim=c(-16,0), ylim=c(-16,0),main="",cex = 1.25,
xlab="",  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{18}, "O (\u2030)")),
xaxt='n')
abline(0,1)
points(hq.comp$d18O.measured, hq.comp$d18O, pch=1)
text(-16,0,"b", cex=1.5)
par(mar=c(4,5,0,0))
plot(dq.comp$d13C.measured, dq.comp$d13C, pch=16, col=pal_map[c], xlim=c(-12,2.1), ylim=c(-12,2.1), main="",cex = 1.25,
xlab=expression(paste("Observed ",delta^{13}, "C (\u2030)")),  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{13}, "C (\u2030)")))
abline(0,1)
points(dq.comp$d13C.measured, dq.comp$d13C, pch=1)
text(-12,2,"c", cex=1.5)
par(mar=c(4,5,0,1))
plot(dq.comp$d18O.measured, dq.comp$d18O, pch=16, col=pal_map[c], xlim=c(-16,0), ylim=c(-16,0), main="",cex = 1.25,
xlab=expression(paste("Observed ",delta^{18}, "O (\u2030)")),  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{18}, "O (\u2030)")))
abline(0,1)
points(dq.comp$d18O.measured, dq.comp$d18O, pch=1)
text(-16,0,"d", cex=1.5)
legend("bottomright", title = "MAP (mm)", cex=1.05, fill=pal_map, legend=c("100 - 200", "200 - 300", "300 - 400", "400 - 500", "500 - 600", "600 - 700", "700 - 800"))
dev.off()
hq_pred = data.frame(d13C=numeric(0), d18O=numeric(0), d13C_sd=numeric(0), d18O_sd=numeric(0))
for(i in 1: nrow(sites)){
hq_pred[i,] = sm_forward_opt_hq(sites$map.wc[i], sites$mat.wc[i], sites$hqp.frac[i], sites$hqt.offset[i], sites$Ra[i], 280)
}
hq_pred$Site = sites$Site
dq_pred = data.frame(d13C=numeric(0), d18O=numeric(0), d13C_sd=numeric(0), d18O_sd=numeric(0))
for(i in 1: nrow(sites)){
dq_pred[i,] = sm_forward_opt_dq(sites$map.wc[i], sites$mat.wc[i], sites$dqp.frac[i], sites$dqt.offset[i], sites$Ra[i], 280)
}
dq_pred$Site = sites$Site
hq.comp = merge.data.frame(hq_pred, sites, by.x = "Site", by.y = "Site", all.x=TRUE)
dq.comp = merge.data.frame(dq_pred, sites, by.x = "Site", by.y = "Site", all.x=TRUE)
hq.comp = merge.data.frame(hq.comp, data.aves, by.x = "Site", by.y = "Group.1", all.x=TRUE)
dq.comp = merge.data.frame(dq.comp, data.aves, by.x = "Site", by.y = "Group.1", all.x=TRUE)
#add it to the predictions and plot
library(RColorBrewer)
c = ceiling(((hq.comp$map.wc - 100) / 700) * 7)
pal_map = brewer.pal(7, "Blues")
c_mat = ceiling(((hq.comp$mat.wc + 5) / 20 * 5))
pal_mat = brewer.pal(6, "YlOrRd")
jpeg("Post_Validation.jpg", units="in", res=300, width=8.5, height=7.5)
layout(matrix(c(1,2,3,4), 2, 2, byrow=T), heights=c(1,1.1,1,1.1), widths=c(1,1.05,1,1.05))
par(mar=c(2,5,1,0))
plot(hq.comp$d13C.measured, hq.comp$d13C, pch=16, col=pal_map[c], xlim=c(-12,2.1), ylim=c(-12,2.1), main="", cex = 1.25,
xlab="", cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{13}, "C (\u2030)")),
xaxt='n')
abline(0,1)
points(hq.comp$d13C.measured, hq.comp$d13C, pch=1)
text(-12,2,"a", cex=1.5)
par(mar=c(2,5,1,1))
plot(hq.comp$d18O.measured, hq.comp$d18O, pch=16, col=pal_map[c], xlim=c(-16,0), ylim=c(-16,0),main="",cex = 1.25,
xlab="",  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{18}, "O (\u2030)")),
xaxt='n')
abline(0,1)
points(hq.comp$d18O.measured, hq.comp$d18O, pch=1)
text(-16,0,"b", cex=1.5)
par(mar=c(4,5,0,0))
plot(dq.comp$d13C.measured, dq.comp$d13C, pch=16, col=pal_map[c], xlim=c(-12,2.1), ylim=c(-12,2.1), main="",cex = 1.25,
xlab=expression(paste("Observed ",delta^{13}, "C (\u2030)")),  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{13}, "C (\u2030)")))
abline(0,1)
points(dq.comp$d13C.measured, dq.comp$d13C, pch=1)
text(-12,2,"c", cex=1.5)
par(mar=c(4,5,0,1))
plot(dq.comp$d18O.measured, dq.comp$d18O, pch=16, col=pal_map[c], xlim=c(-16,0), ylim=c(-16,0), main="",cex = 1.25,
xlab=expression(paste("Observed ",delta^{18}, "O (\u2030)")),  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{18}, "O (\u2030)")))
abline(0,1)
points(dq.comp$d18O.measured, dq.comp$d18O, pch=1)
text(-16,0,"d", cex=1.5)
legend("bottomright", title = "MAP (mm)", cex=1.05, fill=pal_map, legend=c("100 - 200", "200 - 300", "300 - 400", "400 - 500", "500 - 600", "600 - 700", "700 - 800"))
dev.off()
layout(matrix(c(1,2,3,4), 2, 2, byrow=T), heights=c(1,1.1,1,1.1), widths=c(1,1.05,1,1.05))
par(mar=c(2,5,1,0))
plot(hq.comp$d13C.measured, hq.comp$d13C, pch=16, col=pal_map[c], xlim=c(-12,2.1), ylim=c(-12,2.1), main="", cex = 1.25,
xlab="", cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{13}, "C (\u2030)")),
xaxt='n')
abline(0,1)
points(hq.comp$d13C.measured, hq.comp$d13C, pch=1)
text(-12,2,"a", cex=1.5)
par(mar=c(2,5,1,1))
plot(hq.comp$d18O.measured, hq.comp$d18O, pch=16, col=pal_map[c], xlim=c(-16,0), ylim=c(-16,0),main="",cex = 1.25,
xlab="",  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{18}, "O (\u2030)")),
xaxt='n')
abline(0,1)
points(hq.comp$d18O.measured, hq.comp$d18O, pch=1)
text(-16,0,"b", cex=1.5)
par(mar=c(4,5,0,0))
plot(dq.comp$d13C.measured, dq.comp$d13C, pch=16, col=pal_map[c], xlim=c(-12,2.1), ylim=c(-12,2.1), main="",cex = 1.25,
xlab=expression(paste("Observed ",delta^{13}, "C (\u2030)")),  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{13}, "C (\u2030)")))
abline(0,1)
points(dq.comp$d13C.measured, dq.comp$d13C, pch=1)
text(-12,2,"c", cex=1.5)
par(mar=c(4,5,0,1))
plot(dq.comp$d18O.measured, dq.comp$d18O, pch=16, col=pal_map[c], xlim=c(-16,0), ylim=c(-16,0), main="",cex = 1.25,
xlab=expression(paste("Observed ",delta^{18}, "O (\u2030)")),  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{18}, "O (\u2030)")))
abline(0,1)
points(dq.comp$d18O.measured, dq.comp$d18O, pch=1)
text(-16,0,"d", cex=1.5)
legend("bottomright", title = expression(paste("P[a] (mm)")), cex=1.05, fill=pal_map, legend=c("100 - 200", "200 - 300", "300 - 400", "400 - 500", "500 - 600", "600 - 700", "700 - 800"))
layout(matrix(c(1,2,3,4), 2, 2, byrow=T), heights=c(1,1.1,1,1.1), widths=c(1,1.05,1,1.05))
par(mar=c(2,5,1,0))
plot(hq.comp$d13C.measured, hq.comp$d13C, pch=16, col=pal_map[c], xlim=c(-12,2.1), ylim=c(-12,2.1), main="", cex = 1.25,
xlab="", cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{13}, "C (\u2030)")),
xaxt='n')
abline(0,1)
points(hq.comp$d13C.measured, hq.comp$d13C, pch=1)
text(-12,2,"a", cex=1.5)
par(mar=c(2,5,1,1))
plot(hq.comp$d18O.measured, hq.comp$d18O, pch=16, col=pal_map[c], xlim=c(-16,0), ylim=c(-16,0),main="",cex = 1.25,
xlab="",  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{18}, "O (\u2030)")),
xaxt='n')
abline(0,1)
points(hq.comp$d18O.measured, hq.comp$d18O, pch=1)
text(-16,0,"b", cex=1.5)
par(mar=c(4,5,0,0))
plot(dq.comp$d13C.measured, dq.comp$d13C, pch=16, col=pal_map[c], xlim=c(-12,2.1), ylim=c(-12,2.1), main="",cex = 1.25,
xlab=expression(paste("Observed ",delta^{13}, "C (\u2030)")),  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{13}, "C (\u2030)")))
abline(0,1)
points(dq.comp$d13C.measured, dq.comp$d13C, pch=1)
text(-12,2,"c", cex=1.5)
par(mar=c(4,5,0,1))
plot(dq.comp$d18O.measured, dq.comp$d18O, pch=16, col=pal_map[c], xlim=c(-16,0), ylim=c(-16,0), main="",cex = 1.25,
xlab=expression(paste("Observed ",delta^{18}, "O (\u2030)")),  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{18}, "O (\u2030)")))
abline(0,1)
points(dq.comp$d18O.measured, dq.comp$d18O, pch=1)
text(-16,0,"d", cex=1.5)
legend("bottomright", title = expression(paste("P"[a]," (mm)")), cex=1.05, fill=pal_map, legend=c("100 - 200", "200 - 300", "300 - 400", "400 - 500", "500 - 600", "600 - 700", "700 - 800"))
jpeg("Pre_Validation.jpg", units="in", res=300, width=8.5, height=7.5)
layout(matrix(c(1,2,3,4), 2, 2, byrow=T), heights=c(1,1.1,1,1.1), widths=c(1,1.05,1,1.05))
par(mar=c(2,5,1,0))
plot(hq.comp$d13C.measured, hq.comp$d13C, pch=16, col=pal_map[c], xlim=c(-12,2.1), ylim=c(-12,2.1), main="", cex = 1.25,
xlab="", cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{13}, "C (\u2030)")),
xaxt='n')
abline(0,1)
points(hq.comp$d13C.measured, hq.comp$d13C, pch=1)
text(-12,2,"a", cex=1.5)
par(mar=c(2,5,1,1))
plot(hq.comp$d18O.measured, hq.comp$d18O, pch=16, col=pal_map[c], xlim=c(-16,0), ylim=c(-16,0),main="",cex = 1.25,
xlab="",  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{18}, "O (\u2030)")),
xaxt='n')
abline(0,1)
points(hq.comp$d18O.measured, hq.comp$d18O, pch=1)
text(-16,0,"b", cex=1.5)
par(mar=c(4,5,0,0))
plot(dq.comp$d13C.measured, dq.comp$d13C, pch=16, col=pal_map[c], xlim=c(-12,2.1), ylim=c(-12,2.1), main="",cex = 1.25,
xlab=expression(paste("Observed ",delta^{13}, "C (\u2030)")),  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{13}, "C (\u2030)")))
abline(0,1)
points(dq.comp$d13C.measured, dq.comp$d13C, pch=1)
text(-12,2,"c", cex=1.5)
par(mar=c(4,5,0,1))
plot(dq.comp$d18O.measured, dq.comp$d18O, pch=16, col=pal_map[c], xlim=c(-16,0), ylim=c(-16,0), main="",cex = 1.25,
xlab=expression(paste("Observed ",delta^{18}, "O (\u2030)")),  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{18}, "O (\u2030)")))
abline(0,1)
points(dq.comp$d18O.measured, dq.comp$d18O, pch=1)
text(-16,0,"d", cex=1.5)
legend("bottomright", title = expression(paste("P"[a]," (mm)")), cex=1.05, fill=pal_map, legend=c("100 - 200", "200 - 300", "300 - 400", "400 - 500", "500 - 600", "600 - 700", "700 - 800"))
dev.off()
jpeg("Post_Validation.jpg", units="in", res=300, width=8.5, height=7.5)
layout(matrix(c(1,2,3,4), 2, 2, byrow=T), heights=c(1,1.1,1,1.1), widths=c(1,1.05,1,1.05))
par(mar=c(2,5,1,0))
plot(hq.comp$d13C.measured, hq.comp$d13C, pch=16, col=pal_map[c], xlim=c(-12,2.1), ylim=c(-12,2.1), main="", cex = 1.25,
xlab="", cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{13}, "C (\u2030)")),
xaxt='n')
abline(0,1)
points(hq.comp$d13C.measured, hq.comp$d13C, pch=1)
text(-12,2,"a", cex=1.5)
par(mar=c(2,5,1,1))
plot(hq.comp$d18O.measured, hq.comp$d18O, pch=16, col=pal_map[c], xlim=c(-16,0), ylim=c(-16,0),main="",cex = 1.25,
xlab="",  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{18}, "O (\u2030)")),
xaxt='n')
abline(0,1)
points(hq.comp$d18O.measured, hq.comp$d18O, pch=1)
text(-16,0,"b", cex=1.5)
par(mar=c(4,5,0,0))
plot(dq.comp$d13C.measured, dq.comp$d13C, pch=16, col=pal_map[c], xlim=c(-12,2.1), ylim=c(-12,2.1), main="",cex = 1.25,
xlab=expression(paste("Observed ",delta^{13}, "C (\u2030)")),  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{13}, "C (\u2030)")))
abline(0,1)
points(dq.comp$d13C.measured, dq.comp$d13C, pch=1)
text(-12,2,"c", cex=1.5)
par(mar=c(4,5,0,1))
plot(dq.comp$d18O.measured, dq.comp$d18O, pch=16, col=pal_map[c], xlim=c(-16,0), ylim=c(-16,0), main="",cex = 1.25,
xlab=expression(paste("Observed ",delta^{18}, "O (\u2030)")),  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{18}, "O (\u2030)")))
abline(0,1)
points(dq.comp$d18O.measured, dq.comp$d18O, pch=1)
text(-16,0,"d", cex=1.5)
legend("bottomright", title = expression(paste("P"[a]," (mm)")), cex=1.05, fill=pal_map, legend=c("100 - 200", "200 - 300", "300 - 400", "400 - 500", "500 - 600", "600 - 700", "700 - 800"))
dev.off()
## w/ evap
hq_pred = data.frame(d13C=numeric(0), d18O=numeric(0), d13C_sd=numeric(0), d18O_sd=numeric(0))
for(i in 1: nrow(sites)){
hq_pred[i,] = sm_forward_evap(sites$map.wc[i], sites$mat.wc[i], sites$hqp.frac[i], sites$hqt.offset[i], sites$Ra[i], 280)
}
hq_pred$Site = sites$Site
dq_pred = data.frame(d13C=numeric(0), d18O=numeric(0), d13C_sd=numeric(0), d18O_sd=numeric(0))
for(i in 1: nrow(sites)){
dq_pred[i,] = sm_forward_evap(sites$map.wc[i], sites$mat.wc[i], sites$dqp.frac[i], sites$dqt.offset[i], sites$Ra[i], 280)
}
dq_pred$Site = sites$Site
## Plots w/ MAP colors
hq.comp = merge.data.frame(hq_pred, sites, by.x = "Site", by.y = "Site", all.x=TRUE)
dq.comp = merge.data.frame(dq_pred, sites, by.x = "Site", by.y = "Site", all.x=TRUE)
hq.comp = merge.data.frame(hq.comp, data.aves, by.x = "Site", by.y = "Group.1", all.x=TRUE)
dq.comp = merge.data.frame(dq.comp, data.aves, by.x = "Site", by.y = "Group.1", all.x=TRUE)
View(hq.comp)
library(RColorBrewer)
c = ceiling(((hq.comp$map.wc - 100) / 700) * 7)
pal_map = brewer.pal(7, "Blues")
c_mat = ceiling(((hq.comp$mat.wc + 5) / 20 * 5))
pal_mat = brewer.pal(6, "YlOrRd")
jpeg("Pre_Validation.jpg", units="in", res=300, width=8.5, height=7.5)
layout(matrix(c(1,2,3,4), 2, 2, byrow=T), heights=c(1,1.1,1,1.1), widths=c(1,1.05,1,1.05))
par(mar=c(2,5,1,0))
plot(hq.comp$d13C.measured, hq.comp$d13C, pch=16, col=pal_map[c], xlim=c(-12,2.1), ylim=c(-12,2.1), main="", cex = 1.25,
xlab="", cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{13}, "C (\u2030)")),
xaxt='n')
abline(0,1)
points(hq.comp$d13C.measured, hq.comp$d13C, pch=1)
text(-12,2,"a", cex=1.5)
par(mar=c(2,5,1,1))
plot(hq.comp$d18O.measured, hq.comp$d18O, pch=16, col=pal_map[c], xlim=c(-16,0), ylim=c(-16,0),main="",cex = 1.25,
xlab="",  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{18}, "O (\u2030)")),
xaxt='n')
abline(0,1)
points(hq.comp$d18O.measured, hq.comp$d18O, pch=1)
text(-16,0,"b", cex=1.5)
par(mar=c(4,5,0,0))
plot(dq.comp$d13C.measured, dq.comp$d13C, pch=16, col=pal_map[c], xlim=c(-12,2.1), ylim=c(-12,2.1), main="",cex = 1.25,
xlab=expression(paste("Observed ",delta^{13}, "C (\u2030)")),  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{13}, "C (\u2030)")))
abline(0,1)
points(dq.comp$d13C.measured, dq.comp$d13C, pch=1)
text(-12,2,"c", cex=1.5)
par(mar=c(4,5,0,1))
plot(dq.comp$d18O.measured, dq.comp$d18O, pch=16, col=pal_map[c], xlim=c(-16,0), ylim=c(-16,0), main="",cex = 1.25,
xlab=expression(paste("Observed ",delta^{18}, "O (\u2030)")),  cex.axis=1.25, cex.lab=1.25,
ylab=expression(paste("Predicted ",delta^{18}, "O (\u2030)")))
abline(0,1)
points(dq.comp$d18O.measured, dq.comp$d18O, pch=1)
text(-16,0,"d", cex=1.5)
legend("bottomright", title = expression(paste("P"[a]," (mm)")), cex=1.05, fill=pal_map, legend=c("100 - 200", "200 - 300", "300 - 400", "400 - 500", "500 - 600", "600 - 700", "700 - 800"))
dev.off()
View(bayes_fit)
View(ce)
install.packages(rspatial)
install.packages("rspatial")
update
?update
install.packages("r-spatial")
updateR()
install.packages("installr")
updateR()
library(installr)
updateR()
install.packages("rspatial")
install.packages("r-spatial")
updateR()
library(installr)
install.packages("installr")
library(installr)
updateR()
install.packages("rjags")
install.packages("raster")
install.packages("rspatial")
install.packages("maps")
library(maps)
map("world", fill=T)
points(sites$Lon, sites$Lat, col="red", pch=16)
map("world", fill=T, col="white", bg="lightblue")
points(sites$Lon, sites$Lat, col="red", pch=16, cex=0.75)
map("world", fill=T, col="white", bg="lightblue")
points(sites$Lon, sites$Lat, col="red", pch=16, cex=0.75)
map("world", fill=T, col="white", bg="lightblue", mar=c(0,0,0,0))
points(sites$Lon, sites$Lat, col="red", pch=16, cex=0.75)
map("world", fill=T, col="white", bg="lightblue", mar=c(0,0,0,0))
points(sites$Lon, sites$Lat, col="red", pch=16, cex=0.75)
map("world", fill=T, col="white", bg="lightblue", mar=c(0,0,0,0))
points(sites$Lon, sites$Lat, col="red", pch=16, cex=0.75)
View(sites)
install.packages("scales")
library(scales)
map("world", fill=T, col="white", bg="lightblue", mar=c(0,0,0,0))
points(sites$Lon, sites$Lat, col=alpha("red", 0.5), pch=16, cex=1.5)
map("world", fill=T, col="white", bg="lightblue", mar=c(0,0,0,0))
points(sites$Lon, sites$Lat, col=alpha("red", 0.75), pch=16, cex=1.5)
map("world", fill=T, col="white", bg="lightblue", mar=c(0,0,0,0))
points(sites$Lon, sites$Lat, col=alpha("red", 0.75), pch=16, cex=1.5)
map("world", fill=T, col="white", bg="lightblue", mar=c(0,0,0,0))
points(sites$Lon, sites$Lat, col=alpha("red", 0.75), pch=16, cex=1.5)
map("world", fill=T, col="white", bg="lightblue", mar=c(0,0,0,0))
points(sites$Lon, sites$Lat, col=alpha("red", 0.75), pch=16, cex=1.5)
map("world", fill=T, col="white", bg="lightblue", mar=c(0,0,0,0))
points(sites$Lon, sites$Lat, col=alpha("red", 0.65), pch=16, cex=1.5)
jpeg("map.jpg", res=300, width=10, height=5, units="in")
map("world", fill=T, col="white", bg="lightblue", mar=c(0,0,0,0))
points(sites$Lon, sites$Lat, col=alpha("red", 0.65), pch=16, cex=1.5)
dev.off()
